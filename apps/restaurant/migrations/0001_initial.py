# Generated by Django 4.2.7 on 2025-07-02 07:56

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='MenuCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('slug', models.SlugField(unique=True, verbose_name='Слаг')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('image', models.ImageField(blank=True, null=True, upload_to='menu/categories/', verbose_name='Изображение')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='Порядок сортировки')),
            ],
            options={
                'verbose_name': 'Категория меню',
                'verbose_name_plural': 'Категории меню',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='RestaurantSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Ресторан "LOGAN"', max_length=200, verbose_name='Название ресторана')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('address', models.TextField(verbose_name='Адрес')),
                ('phone', models.CharField(max_length=20, verbose_name='Телефон')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('website', models.URLField(blank=True, verbose_name='Веб-сайт')),
                ('opening_time', models.TimeField(default='10:00', verbose_name='Время открытия')),
                ('closing_time', models.TimeField(default='23:00', verbose_name='Время закрытия')),
                ('booking_advance_days', models.PositiveIntegerField(default=30, verbose_name='Дней вперед для бронирования')),
                ('min_booking_duration', models.PositiveIntegerField(default=60, verbose_name='Мин. время бронирования (мин)')),
                ('max_booking_duration', models.PositiveIntegerField(default=240, verbose_name='Макс. время бронирования (мин)')),
                ('default_booking_duration', models.PositiveIntegerField(default=120, verbose_name='Стандартное время бронирования (мин)')),
                ('booking_interval', models.PositiveIntegerField(default=30, verbose_name='Интервал между бронированиями (мин)')),
                ('cancellation_hours', models.PositiveIntegerField(default=2, verbose_name='Часов до отмены')),
                ('facebook_url', models.URLField(blank=True, verbose_name='Facebook')),
                ('instagram_url', models.URLField(blank=True, verbose_name='Instagram')),
                ('telegram_url', models.URLField(blank=True, verbose_name='Telegram')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='restaurant/', verbose_name='Логотип')),
                ('hero_image', models.ImageField(blank=True, null=True, upload_to='restaurant/', verbose_name='Главное изображение')),
            ],
            options={
                'verbose_name': 'Настройки ресторана',
                'verbose_name_plural': 'Настройки ресторана',
            },
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('slug', models.SlugField(unique=True, verbose_name='Слаг')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('image', models.ImageField(blank=True, null=True, upload_to='zones/', verbose_name='Изображение')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='Порядок сортировки')),
            ],
            options={
                'verbose_name': 'Зона',
                'verbose_name_plural': 'Зоны',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название')),
                ('slug', models.SlugField(unique=True, verbose_name='Слаг')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('ingredients', models.TextField(blank=True, verbose_name='Состав')),
                ('image', models.ImageField(blank=True, null=True, upload_to='menu/items/', verbose_name='Изображение')),
                ('price', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Цена')),
                ('weight', models.PositiveIntegerField(blank=True, null=True, verbose_name='Вес (г)')),
                ('calories', models.PositiveIntegerField(blank=True, null=True, verbose_name='Калории')),
                ('cooking_time', models.PositiveIntegerField(default=15, verbose_name='Время приготовления (мин)')),
                ('is_available', models.BooleanField(default=True, verbose_name='Доступно')),
                ('is_special', models.BooleanField(default=False, verbose_name='Спецпредложение')),
                ('is_vegetarian', models.BooleanField(default=False, verbose_name='Вегетарианское')),
                ('is_vegan', models.BooleanField(default=False, verbose_name='Веганское')),
                ('is_gluten_free', models.BooleanField(default=False, verbose_name='Без глютена')),
                ('allergens', models.JSONField(blank=True, default=list, verbose_name='Аллергены')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='Порядок сортировки')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='restaurant.menucategory', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Блюдо',
                'verbose_name_plural': 'Блюда',
                'ordering': ['category', 'sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
                ('capacity', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)], verbose_name='Вместимость')),
                ('min_capacity', models.PositiveIntegerField(default=1, verbose_name='Минимальная вместимость')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('image', models.ImageField(blank=True, null=True, upload_to='tables/', verbose_name='Изображение')),
                ('price_per_hour', models.DecimalField(decimal_places=2, default=0, max_digits=8, verbose_name='Цена за час')),
                ('deposit', models.DecimalField(decimal_places=2, default=0, max_digits=8, verbose_name='Депозит')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('is_vip', models.BooleanField(default=False, verbose_name='VIP столик')),
                ('features', models.JSONField(blank=True, default=list, help_text='Список особенностей столика', verbose_name='Особенности')),
                ('position_x', models.FloatField(default=0, help_text='Координата X на плане зала', verbose_name='Позиция X')),
                ('position_y', models.FloatField(default=0, help_text='Координата Y на плане зала', verbose_name='Позиция Y')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('zone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tables', to='restaurant.zone', verbose_name='Зона')),
            ],
            options={
                'verbose_name': 'Столик',
                'verbose_name_plural': 'Столики',
                'ordering': ['zone', 'name'],
                'unique_together': {('zone', 'name')},
            },
        ),
    ]
